@page "/PastReports"

@inject NavigationManager NavigationManager
@inject IReportDataService reportData
@inject ICustomerSessionData sessionData

<h3>Search Past Reports</h3>

<div class="row">
	<div class="col-md-6">
		<EditForm Model="searchDetails" OnValidSubmit="HandleValidSubmit">
			<DataAnnotationsValidator/>
			<ValidationSummary/>


			<div class="mb-3">
				<label>Last Name:</label>
				<InputText @bind-Value="searchDetails.LastName" class="form-control" />
			</div>

			<div class="mb-3">
				<label>Number Plate:</label>
				<InputText @bind-Value="searchDetails.NumberPlate" class="form-control" />
			</div>

			<button class="btn btn-primary" type="submit">Search</button>

		</EditForm>

@if (wasSearchButtonClicked)
{
	@if (reports != null)
	{
		@if (reports.Count == 0)
		{
			<h2>No reports were found with the provided details.</h2>
			<h3>Please try again.</h3>
		}
		else
		{
			<h2>Reports found for vehicle @searchDetails.NumberPlate</h2>
			@foreach (var r in reports)
			{				
				@if (r != reports.FirstOrDefault())
				{
					int kmsBetweenServices = previousReportOdometer - r.Odometer;
					int daysBetweenServices = (previousReportDate - r.TimeStarted).Days;
					<div>
						<p>Kms between services: @kmsBetweenServices</p>
						<p>Days between services: @daysBetweenServices</p>
					</div>
				}

				<div class="alert-info">
					<p>Report ID: @r.ID</p>
					<p>Date: @r.TimeStarted.ToShortDateString()</p>
					<p>Odometer: @r.Odometer kms</p>
					<button @onclick="(() => GoToReport(r))">View Report</button>
				</div>

				previousReportDate = r.TimeStarted;
				previousReportOdometer = r.Odometer;
			}
		}
	}
}

	</div>
</div>


@code {
	private ISearchReporstByLastNameAndRego searchDetails = new UISearchReporstByLastNameAndRego();
	private List<IFullReportModel> reports;
	private bool wasSearchButtonClicked = false;

	private DateTime previousReportDate;
	private int previousReportOdometer;

	protected override void OnInitialized()
	{
		if (sessionData.GetReports() != null)
		{
			reports = sessionData.GetReports();
			wasSearchButtonClicked = sessionData.GetSearchButtonClicked();
			searchDetails = sessionData.GetSearchDetails();
		}
	}

	private async Task HandleValidSubmit()
	{
		searchDetails.LastName = searchDetails.LastName.Trim();
		searchDetails.LastName = searchDetails.LastName.Substring(0, 1).ToUpper() + searchDetails.LastName.Substring(1).ToLower();

		searchDetails.NumberPlate = searchDetails.NumberPlate.Trim();
		searchDetails.NumberPlate = Regex.Replace(searchDetails.NumberPlate, "[^a-zA-Z0-9]", String.Empty).ToUpper();

		reports = await reportData.SearchReports(searchDetails);

		sessionData.SetReports(reports);
		sessionData.SetSearchButtonClickedToTrue();
		sessionData.SetSearchDetails(searchDetails);

		wasSearchButtonClicked = true;
	}

	private void GoToReport(IFullReportModel reportToSee)
	{
		sessionData.SetReport(reportToSee);
		NavigationManager.NavigateTo("/WatchReport");
	}
}
