@page "/BookAppointment"
@using DataAccessLibrary.Data.Interfaces
@inject IApiCalls ApiCalls
@inject ICustomerDataService CustomerData
@inject IVehicleDataService VehicleData
@inject IAppointmentDataService AppointmentData
@inject ICustomerSessionData SessionData
@inject NavigationManager NavigationManager

<PageTitle>Book An Appointment</PageTitle>

<div class="text-center">
	<h2 class="display-3">Book An Appointment With Us!</h2>
</div>


<div class="row mt-4 justify-content-between">
	<div class="col-md-6 p-4 bg-info-subtle rounded-4">
		<EditForm Model="@_newAppointment" OnValidSubmit="HandleValidSubmit">
			<DataAnnotationsValidator/>
			<ValidationSummary/>
			
			<div class="mb-3 form-floating">
				<InputText @bind-Value="_newAppointment.NumberPlate" @onfocusout="RetrieveVehicleData" id="numberPlate" placeholder="Vehicle Number Plate" class="form-control" />
				<label for="numberPlate" class="form-label">Vehicle Number Plate</label>
			</div>

			<div class="mb-3 form-floating">
				<InputText @bind-Value="_newAppointment.FirstName" id="firstName" placeholder="First Name" class="form-control" />
				<label for="firstName" class="form-label">First Name</label>
			</div>

			<div class="mb-3 form-floating">
				<InputText @bind-Value="_newAppointment.LastName" id="lastName" placeholder="Last Name" class="form-control" />
				<label for="lastName" class="form-label">Last Name</label>
			</div>

			<div class="mb-3 form-floating">
				<InputText @bind-Value="_newAppointment.Email" id="email" placeholder="Email" class="form-control" />
				<label for="email" class="form-label">Email</label>
			</div>

			<div class="mb-3 form-floating">
				<InputText @bind-Value="_newAppointment.PhoneNumber" id="phoneNumber" placeholder="Phone Number" class="form-control" />
				<label for="phoneNumber" class="form-label">Phone Number</label>
			</div>

			<div class="mb-3 form-floating">
				<InputText @bind-Value="_newAppointment.Address" id="address" placeholder="Address" class="form-control" />
				<label for="address" class="form-label">Address</label>
			</div>

			<div class="mb-3 form-floating">
				<InputDate @bind-Value="_newAppointment.Date" id="date" placeholder="Date" class="form-control" />
				<label for="date" class="form-label">Appointment Date</label>
			</div>

			@if (_disableButton)
			{
				<div class="text-center">
					<button class="btn btn-secondary" type="submit" disabled>Book An Appointment!</button>
				</div>	
			}
			else
			{
				<div class="text-center">
					<button class="btn btn-primary" type="submit">Book An Appointment!</button>
				</div>
			}

		</EditForm>
	</div>


	

		@if (_newVehicle != null)
		{
			<div class="col-md-6 p-4 rounded-4">

				<table class="table table-striped table-hover">
					<thead>
						<tr>
							<th colspan="2" class="display-5 text-center">Vehicle Details</th>
						</tr>
					</thead>
					<tbody>
					<tr>
						<td class="h4 fw-bold">Number Plate:</td>
						<td class="h4">@_newVehicle.NumberPlate</td>
					</tr>
					<tr>
						<td class="h4 fw-bold">Make:</td>
						<td class="h4">@_newVehicle.Make</td>
					</tr>
					<tr>
						<td class="h4 fw-bold">Model:</td>
						<td class="h4">@_newVehicle.Model</td>
					</tr>
					<tr>
						<td class="h4 fw-bold">Year:</td>
						<td class="h4">@_newVehicle.Year</td>
					</tr>
					<tr>
						<td class="h4 fw-bold">VIN:</td>
						<td class="h4">@_newVehicle.Vin</td>
					</tr>
					<tr>
						<td class="h4 fw-bold">Engine:</td>
						<td class="h4">@_newVehicle.EngineDescription</td>
					</tr>
					<tr>
						<td class="h4 fw-bold">Body:</td>
						<td class="h4">@_newVehicle.BodyType</td>
					</tr>
					<tr>
						<td class="h4 fw-bold">Transmission:</td>
						<td class="h4">@_newVehicle.TransmissionType</td>
					</tr>
					<tr>
						<td class="h4 fw-bold">Fuel:</td>
						<td class="h4">@_newVehicle.FuelType</td>
					</tr>
					</tbody>
				</table>
			</div>
		}
		else if (_apiErrorMessage != "")
		{
		<div class="col-md-6 p-4 bg-alert-subtle rounded-4 text-center">
			<div class="alert alert-danger" role="alert">
				@_apiErrorMessage
			</div>
		</div>
		}

	
</div>

@code {
	private UIAppointmentFormModel _newAppointment = new();
	private IVehicleModel _newVehicle;
	private ICustomerModel _newCustomer;
	private int _customerId;
	private int _vehicleId;
	private int _appointmentId;
	private bool _disableButton = true;

	private string _apiErrorMessage = "";

	private void RetrieveVehicleData()
	{
		if (_newAppointment.NumberPlate != null)
		{
			_apiErrorMessage = "";

			_newAppointment.NumberPlate = _newAppointment.NumberPlate.TrimAndUpperCaseNumberPlate();

			try
			{
				_newVehicle = ApiCalls.GetVehicleDetails(_newAppointment.NumberPlate);
				_disableButton = false;

			}
			catch (Exception e)
			{
				_newVehicle = null;
				// Console.WriteLine(e);
				_apiErrorMessage = "Vehicle not found. Please call us to book an appointment.";
				_disableButton = true;
			}
		}
	}

	private async void HandleValidSubmit()
	{
		_newCustomer = new CustomerModel();

		_newCustomer.FirstName = _newAppointment.FirstName.RemoveWhiteSpaceAndTitleCase();
		_newCustomer.LastName = _newAppointment.LastName.RemoveWhiteSpaceAndTitleCase();

		_newCustomer.PhoneNumber = _newAppointment.PhoneNumber;
		_newCustomer.Email = _newAppointment.Email;
		_newCustomer.Address = _newAppointment.Address;

		_customerId = await CustomerData.CreateCustomer(_newCustomer);
		_newVehicle.CustomerId = _customerId;
		_vehicleId = await VehicleData.CreateVehicle(_newVehicle);

		IAppointmentModel appointmentToDb = new AppointmentModel();
		appointmentToDb.CustomerId = _customerId;
		appointmentToDb.VehicleId = _vehicleId;
		appointmentToDb.Date = _newAppointment.Date;

		_appointmentId = await AppointmentData.CreateAppointment(appointmentToDb);

		SessionData.SetAppointmentId(_appointmentId);
		SessionData.SetAppointmentDateTime(appointmentToDb.Date);
		SessionData.SetAppointmentNumberPlate(_newVehicle.NumberPlate);

		NavigationManager.NavigateTo("/AppointmentSuccessful");
	}
}
