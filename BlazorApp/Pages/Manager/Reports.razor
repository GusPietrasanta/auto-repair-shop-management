@page "/Reports"
<PageTitle>Reports</PageTitle>
@attribute [Authorize(Roles = "Manager")]
@inject IReportDataService ReportData
@inject NavigationManager NavigationManager
@inject IManagerSessionData ManagerSession

<div class="text-center">
	<h1 class="display-3 fw-normal">Reports</h1>
	<button class="btn btn-outline-info btn-lg" @onclick="(PreviousPage)">Go to previous page</button>
</div>

<hr/>

<div class="row justify-content-center">
	<div class="col-5">
		@if (_inspections != null)
		{
			@foreach (var c in _inspections)
			{
				<div class="alert alert-info text-center">
					<p class="lead">
						<b>Vehicle:</b> @c.NumberPlate - @c.Make @c.Model @c.Year <br/>
						<b>Customer:</b> @c.FirstName @c.LastName <br/>
						<b>Completed by:</b> @c.UserName on @c.TimeFinished.ToString("g")<br/>
					</p>
					<button class="btn btn-primary" @onclick="(() => SeeReport(c.ID))">See Report</button>
				</div>
			}
		}
		else
		{
			<p>No completed inspections.</p>
		}
	</div>
</div>


@code {
	private List<IDashboardReportModel> _inspections;

	protected async override Task OnInitializedAsync()
	{
		_inspections = await ReportData.SearchAllReportsDashboardNonArchived();
	}

		private void SeeReport(int reportID)
	{
		ManagerSession.SetLastPage(NavigationManager.Uri);
		NavigationManager.NavigateTo($"/Report/{reportID}");
	}	
	
	private void PreviousPage()
	{
		NavigationManager.NavigateTo(ManagerSession.GetLastPage());
	}
}
