@inject IAppointmentDataService appointmentData
@inject IMessageDataService messageData
@inject IStockDataService stockData
@inject IReportDataService reportData
@inject IMechanicDataService mechanicData
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<br />

<h3>Manager Dashboard Component</h3>

<br />

<div class="row">

	<div class="col-md-6">
		<h2>Today's Appointments:</h2>
		@if (todayAppointments != null)
		{
			@foreach (var a in todayAppointments)
			{
				<div class="@(a.UserName == null ? "alert-danger" : a.Completed != false ? "alert-success" : "alert-warning")">
				<p>@a.ID</p>
				<p>Car @a.NumberPlate</p>
				@if (a.UserName != null && a.Completed == false)
				{
					<p>Assigned to @a.UserName</p>
				}
				else if (a.UserName != null && a.Completed)
				{
					<p>Completed by @a.UserName</p>
				}
				else
				{
					<p>Job not assigned to any mechanic!</p>
					<select @onfocusin="ResetAllDropDowns" @onchange="HandleDropDownChange">
						<option value="">Select Mechanic...</option>
						@foreach (var m in mechanics)
						{
							<option value="@m.ID">@m.UserName</option>
						}
					</select>

					<button class="btn btn-outline-primary" @onclick="(() => AssignJobCard(a.ID))">Assign</button>

				}
				@if (a.Completed)
				{
						<button class="btn btn-outline-primary" @onclick="(() => SeeReportFromAppointment(a.ID))">
						See Report</button>
				}
				else if (a.Completed || a.UserName != null)
				{
					<p>Inspection in progress.</p>
				}
				<br>
				</div>
				<br>

			}
		}
		else
		{
			<p>No appointments for today!</p>
		}
	</div>



	<div class="col-md-6">
		<h2>Unread Messages: </h2>
		@if (messages != null)
		{
			@foreach (var m in messages)
			{
				<p>@m.UserName posted on @m.PostedOn:</p>
				<p>@m.Content</p>
			}
		}
		else
		{
			<p>No new messages!</p>
		}
	</div>

</div>

<br />
<br />
<br />

<div class="row">

	<div class="col-md-6">
		<h2>Stock Warnings:</h2>
		@if (stock != null)
		{
			@foreach (var i in stock)
			{
				<p>@i.ItemName is low</p>
			}
		}
		else
		{
			<p>All good in the inventory!</p>
		}
	</div>

	<div class="col-md-6">
		<h2>Completed Inspections:</h2>
		@if (completedInspections != null)
		{
			@foreach (var c in completedInspections)
			{
				<p>Vehicle: @c.NumberPlate - @c.Make @c.Model @c.Year</p>
				<p>Customer: @c.FirstName @c.LastName</p>
				<p>Completed by: @c.UserName on @c.TimeFinished</p>
			}
		}
		else
		{
			<p>All good in the inventory!</p>
		}
	</div>

</div>

@code {
	private List<IMechanicBasicModel> mechanics;
	private List<IDetailedAppointment> todayAppointments;
	private List<IMessageModel> messages;
	private List<IStockItemModel> stock;
	private List<IDashboardReportModel> completedInspections;
	private int mechanicIDToAssign;

	protected async override Task OnInitializedAsync()
	{
		todayAppointments = await appointmentData.ReadTodaysAppointmentsDetailed();
		messages = await messageData.ReadAllUnreadMessages();
		stock = await stockData.ReadLowStockItems();
		completedInspections = await reportData.SearchAllReporstDashboard();
		mechanics = await mechanicData.ReadAllMechanicsBasic();
	}

	private async void ResetAllDropDowns()
	{
		mechanicIDToAssign = 0;
		await JSRuntime.InvokeAsync<object>("ResetAllDropDowns");
	}

	private void HandleDropDownChange(ChangeEventArgs e)
	{
		if (e.Value.ToString() == "")
		{
			mechanicIDToAssign = 0;
		}
		else
		{
			mechanicIDToAssign = int.Parse(e.Value.ToString());
		}
	}

	private async void AssignJobCard(int appointmentId)
	{
		Console.WriteLine(appointmentId);
		Console.WriteLine(mechanicIDToAssign);
		if (mechanicIDToAssign > 0)
		{
			await appointmentData.AssignJobCardByID(appointmentId, mechanicIDToAssign);
			var appointment = todayAppointments.Where(x => x.ID == appointmentId).FirstOrDefault();

			appointment.MechanicID = mechanicIDToAssign;

			appointment.UserName = mechanics.Where(x => x.ID == mechanicIDToAssign).FirstOrDefault().UserName;

			await JSRuntime.InvokeAsync<object>("ResetAllDropDowns");

			StateHasChanged();
		}
	}

	private async void SeeReportFromAppointment(int appointmentID)
	{
		// Get inspection number by appointmentID
		int reportID = await reportData.GetReportIDFromAppointmentIDAsync(appointmentID);

		// Redirect to inspection page
		NavigationManager.NavigateTo($"/Report/{reportID}");
	}
}
