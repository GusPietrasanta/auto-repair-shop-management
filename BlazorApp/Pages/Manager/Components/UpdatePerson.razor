@inject ICustomerDataService CustomerData

<h3>Update Customer</h3>

<EditForm Model="@_customerToUpdate" OnValidSubmit="HandleValidSubmit">
	<DataAnnotationsValidator/>
	<ValidationSummary/>

	<div class="form-group">
		<label>ID:</label>
		<span>@_customerToUpdate.ID</span>
	</div>

	<div class="form-group">
		<label>First Name</label>
		<InputText @bind-Value="_customerToUpdate.FirstName" class="form-control" />
	</div>

	<div class="form-group">
		<label>Last Name</label>
		<InputText @bind-Value="_customerToUpdate.LastName" class="form-control" />
	</div>

	<div class="form-group">
		<label>Email</label>
		<InputText @bind-Value="_customerToUpdate.Email" class="form-control" />
	</div>

	<div class="form-group">
		<label>Phone Number</label>
		<InputText @bind-Value="_customerToUpdate.PhoneNumber" class="form-control" />
	</div>

	<div class="form-group">
		<label>Address</label>
		<InputText @bind-Value="_customerToUpdate.Address" class="form-control" />
	</div>

	<button class="btn btn-primary" type="submit">Update Person</button>

</EditForm>

@code {
	[Parameter]
	public EventCallback<ICustomerModel> OnUpdate { get; set; }

	[Parameter]
	public ICustomerModel Customer { get; set; }

	private ICustomerModel _customerToUpdate = new UICustomerModel();

	private async Task HandleValidSubmit()
	{
		await CustomerData.UpdateCustomer(_customerToUpdate);
		await OnUpdate.InvokeAsync(_customerToUpdate);
	}

	protected override void OnParametersSet()
	{
		_customerToUpdate.ID = Customer.ID;
		_customerToUpdate.FirstName = Customer.FirstName;
		_customerToUpdate.LastName = Customer.LastName;
		_customerToUpdate.PhoneNumber = Customer.PhoneNumber;
		_customerToUpdate.Email = Customer.Email;
		_customerToUpdate.Address = Customer.Address;
	}
}
