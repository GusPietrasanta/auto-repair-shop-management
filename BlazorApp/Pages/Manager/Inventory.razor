@page "/Inventory"
<PageTitle>Inventory</PageTitle>
@inject IStockDataService StockData
@inject IManagerSessionData ManagerSession
@inject NavigationManager NavigationManager

<div class="text-center">
	<h1 class="display-3 fw-normal">Inventory</h1>
	<button class="btn btn-outline-info btn-lg" @onclick="(PreviousPage)">Go to previous page</button>
</div>

<hr/>

@if (_stockItems == null)
{
	<h4>Loading Stock Items...</h4>
}
else
{
	

	<div class="row justify-content-center">
		<div class="col-md-6">
			
			<h3 class="text-center">Stock Items</h3>
			
			@foreach (var i in _stockItems)
			{
				if (@i.Quantity == 0)
				{
					<div class="w-75 text-center mx-auto">
						<a class="fill-div" style="text-decoration: none;" href="#">
							<div class="alert alert-danger" role="alert" @onclick="(() => GoToItem(i.ID))">
								<p class="lead">ID: @i.ID. <b>@i.ItemName</b>, @i.Quantity @i.Unit</p>
							</div>
						</a>
					</div>
				}
				else if (@i.Quantity <= @i.AlarmMinimum)
				{
					<div class="w-75 text-center mx-auto">
						<a class="fill-div" style="text-decoration: none;" href="#">
							<div class="alert alert-warning" role="alert" @onclick="(() => GoToItem(i.ID))">
							<p class="lead">ID: @i.ID. <b>@i.ItemName</b>, @i.Quantity @i.Unit</p>
							</div>
						</a>
					</div>
				}
				else
				{
				<div class="w-75 text-center mx-auto">
					<a class="fill-div" style="text-decoration: none;" href="#">
						<div class="alert alert-success" role="alert" @onclick="(() => GoToItem(i.ID))">
							<p class="lead">ID: @i.ID. <b>@i.ItemName</b>, @i.Quantity @i.Unit</p>
						</div>
					</a>
				</div>
				}
			}
		</div>

		<div class="col-md-6">
			<CreateStockItem></CreateStockItem>
		</div>
	</div>
	
	<div class="text-center mb-2">
		<button class="btn btn-outline-info btn-lg mx-auto" @onclick="(() => PreviousPage())">Go to previous page</button>	
	</div>
	
}

@code {
	private List<IStockItemModel> _stockItems;

	protected override async Task OnParametersSetAsync()
	{
		_stockItems = await StockData.ReadAllStockItems();
	}
	
	protected override async Task OnInitializedAsync()
	{
		_stockItems = await StockData.ReadAllStockItems();
	}

	private void PreviousPage()
	{
		NavigationManager.NavigateTo(ManagerSession.GetLastPage());
	}

	private void GoToItem(int itemID)
	{
		ManagerSession.SetLastPage(NavigationManager.Uri);
		NavigationManager.NavigateTo($"/StockItem/{itemID}");
	}
}