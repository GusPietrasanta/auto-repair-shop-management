@attribute [Authorize(Roles = "Manager")]

@if (_vehicle != null)
{
	<PageTitle>@_vehicle.NumberPlate Information</PageTitle>
}
else
{
	<PageTitle>Vehicle Details</PageTitle>
}


@page "/Vehicle/{vehicleID:int}"
@using DataAccessLibrary.Data.Interfaces
@inject IVehicleDataService VehicleData
@inject IReportDataService ReportData
@inject NavigationManager NavigationManager
@inject IManagerSessionData ManagerSession

<div class="text-center">
	<h1 class="display-3 fw-normal">Vehicle Information</h1>
	<button class="btn btn-outline-info btn-lg" @onclick="(PreviousPage)">Go to previous page</button>
</div>

<hr/>

<div class="row">

		@if (_vehicle != null)
		{
		<div class="col-md-6">
		<form>
			<fieldset disabled="@_isFormDisabled">

		<EditForm Model="@_vehicle" OnValidSubmit="HandleValidSubmit">
			<DataAnnotationsValidator/>
			<ValidationSummary/>

				<div class="form-group">
					<label><b>Vehicle ID:</b></label>
					<input class="form-control" disabled readonly value="@_vehicle.Id"/>
				</div>

				<div class="form-group">
					<label class="fw-bold">Number Plate:</label>
					<InputText @bind-Value="_vehicle.NumberPlate" class="form-control" />
				</div>
				
				<div class="form-group">
					<label class="fw-bold">Make:</label>
					<InputText @bind-Value="_vehicle.Make" class="form-control" />
				</div>

				<div class="form-group">
					<label class="fw-bold">Model:</label>
					<InputText @bind-Value="_vehicle.Model" class="form-control" />
				</div>

				<div class="form-group">
					<label class="fw-bold">Year:</label>
					<InputText @bind-Value="_vehicle.Year" class="form-control" />
				</div>

				<div class="form-group">
					<label class="fw-bold">VIN:</label>
					<InputText @bind-Value="_vehicle.Vin" class="form-control" />
				</div>
				
				<div class="form-group">
					<label class="fw-bold">Engine:</label>
					<InputText @bind-Value="_vehicle.EngineDescription" class="form-control" />
				</div>

				<div class="form-group">
					<label class="fw-bold">Transmission:</label>
					<InputText @bind-Value="_vehicle.TransmissionType" class="form-control" />
				</div>
				
				<div class="form-group">
					<label class="fw-bold">Engine Size:</label>
					<InputText @bind-Value="_vehicle.SizeLitres" class="form-control" />
				</div>

				<div class="form-group">
					<label class="fw-bold">Cylinders:</label>
					<InputText @bind-Value="_vehicle.Cylinders" class="form-control" />
				</div>

				<div class="form-group">
					<label class="fw-bold">Fuel Type:</label>
					<InputText @bind-Value="_vehicle.FuelType" class="form-control" />
				</div>

				<div class="form-group">
					<label class="fw-bold">Body Type:</label>
					<InputText @bind-Value="_vehicle.BodyType" class="form-control" />
				</div>

				<div class="form-group">
				<label class="fw-bold">First Visit:</label>
				@if (_vehicle.FirstVisit.ToShortDateString() == "1/01/0001")
				{
				<p>Has never been at the shop yet.</p>
				}
				else
				{

				<InputDate @bind-Value="_vehicle.FirstVisit" class="form-control" />
				
				}
				</div>

		</EditForm>

				</fieldset>
			</form>

			<br/>

			<div>
				
			<button class="btn btn-primary me-2" style="min-width: 150px" @onclick="(ToggleEdit)">Edit</button>
		
			@if (_isFormDisabled == false)	
			{
					<button class="btn btn-success" style="min-width: 150px" type="submit" @onclick="(HandleValidSubmit)">Save</button>
			}
		</div>
	
		</div>
		}

	<div class="col-4 mx-auto">

		@if (_reports != null)
		{
			<h2 class="text-center">Reports: </h2>
			@foreach (var r in _reports)
			{
				@if (r != _reports.FirstOrDefault())
				{
					int kmsBetweenServices = _previousReportOdometer - r.Odometer;
					int daysBetweenServices = (_previousReportDate - r.TimeStarted).Days;
					<div class="alert alert-info text-center">
						<p class="lead">Kms between services: @kmsBetweenServices.ToString("N0") kms.</p>
						<p class="lead">Days between services: @daysBetweenServices days.</p>
					</div>
				}

				@if (r != null)
				{
					<div class="alert alert-success text-center">
						@*<p>Report ID: @r.ID</p>*@
						<p class="lead">Date: @r.TimeStarted.ToShortDateString() | Odometer: @r.Odometer kms</p>
						<button class="btn btn-primary" @onclick="(() => SeeReport(r.Id))">View Report</button>
					</div>
						
					_previousReportDate = r.TimeStarted;
					_previousReportOdometer = r.Odometer;
				}
			}
		}

	</div>

</div>

<div class="text-center mb-2">
<button class="btn btn-outline-info btn-lg" @onclick="(PreviousPage)">Go to previous page</button>
</div>

@code {
	private bool _isFormDisabled = true;

	[Parameter]
	public int VehicleId { get; set; }

	private IVehicleModel _vehicle;
	private List<IReportModel> _reports;

	private DateTime _previousReportDate;
	private int _previousReportOdometer;

	private void ToggleEdit()
	{
		_isFormDisabled = !_isFormDisabled;
	}

	private void HandleValidSubmit()
	{
		VehicleData.UpdateVehicle(_vehicle);
		_isFormDisabled = true;
	}

	protected override async Task OnInitializedAsync()
	{
		_vehicle = await VehicleData.GetVehicleDetailsById(VehicleId);
		_reports = await ReportData.GetReportsByVehicleId(VehicleId);
	}

	protected override async Task OnParametersSetAsync()
	{
		_vehicle = await VehicleData.GetVehicleDetailsById(VehicleId);
		_reports = await ReportData.GetReportsByVehicleId(VehicleId);
	}

	private void PreviousPage()
	{
		NavigationManager.NavigateTo(ManagerSession.GetLastPage());
	}

	private void SeeReport(int reportId)
	{
		ManagerSession.SetLastPage(NavigationManager.Uri);
		//managerSession.SetLastPage($"/Vehicle/{vehicleID}");
		NavigationManager.NavigateTo($"/Report/{reportId}");
	}
}
