@page "/ReadStock"
@inject IStockDataService stockData
@inject IManagerSessionData managerSession
@inject NavigationManager NavigationManager

<h3>Test Read Stock</h3>

<button class="btn btn-info" @onclick="(() => previousPage())">Go to previous page</button>

@if (stockItems == null)
{
	<h4>Loading Stock Items...</h4>
}
else
{
	<h2>Stock Items</h2>

	<div class="row">
		<div class="col-md-6">
			@foreach (var i in stockItems)
			{
				if (@i.Quantity == 0)
				{
					<div class="alert alert-danger" role="alert">
						<p>ID: @i.ID. @i.ItemName, @i.Quantity @i.Unit</p>
					</div>
				}
				else if (@i.Quantity < @i.AlarmMinimum)
				{
					<div class="alert alert-warning" role="alert">
						<p>ID: @i.ID. @i.ItemName, @i.Quantity @i.Unit</p>
					</div>
				}
				else
				{
					<div class="alert alert-success" role="alert">
						<p>ID: @i.ID. @i.ItemName, @i.Quantity @i.Unit</p>
					</div>
				}
			}
		</div>
	</div>
}

@code {
	private List<IStockItemModel> stockItems;

	protected override async Task OnParametersSetAsync()
	{
		stockItems = await stockData.ReadAllStockItems();
	}

	private void previousPage()
	{
		NavigationManager.NavigateTo(managerSession.GetLastPage());
	}
}